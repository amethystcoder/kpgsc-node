<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="../static/common_styles.css">
        <link rel="stylesheet" href="../static/linkCU.css">
        <script src="../static/clientWsConnect.js"></script>
        <link rel="shortcut icon" href="<%=favicon%>" type="image/x-icon">
        <title><%=title%></title>
        <script>
            window.addEventListener("DOMContentLoaded",(ev)=>{
                changeVideoInputType()
                let linkForm = document.querySelector(".main-link-form")
                linkForm.addEventListener("submit",(ev)=>{
                    ev.preventDefault()
                    let formdata = new FormData(linkForm)
                    fetch("../api/link/create",{
                        method:"POST",
                        body:formdata
                    }).then(Response=>Response.json())
                    .then(body=>{
                        console.log(body)
                        if(body.success){
                            window.location.replace('../link/'+body.message[0].insertId)
                        }
                    })
                    .catch(error=>{console.log(error)})
                })
            })
            function convertHLS(){
                fetch("../api/convert/hls",{
                    method:"POST",
                    body:formdata
                }).then(Response=>Response.json())
                .then(body=>{console.log(body)})
                .catch(error=>{console.log(error)})
            }
            function changeVideoInputType() {
                const linkTypeSelect = document.getElementById("link-select")
                let inputs = [document.getElementById("contains-link-inputs"),document.getElementById("contains-file-inputs"),document.getElementById("contains-ftp-inputs")]
                const SelectTypeValue = linkTypeSelect.value
                for (let index = 0; index < inputs.length; index++) {
                    if(inputs[index].getAttribute("data-name") === SelectTypeValue) inputs[index].style.display = "block"
                    else inputs[index].style.display = "none"
                }
            }
            function setLabelImage(inputId,labelId) {
                const input = document.getElementById(inputId)
                const label = document.getElementById(labelId)
                const imageMimes = ["jpg","jpeg","png","webp"]
                const splitImageName = input.files[0].name.split(".")
                if (splitImageName[splitImageName.length - 1] == "mp4") {
                    let videoElement = document.getElementById("uploaded-vid")
                    if (!videoElement){
                        videoElement = document.createElement("video")
                        videoElement.id = "uploaded-vid"
                        label.appendChild(videoElement)
                    } 
                    videoElement.load()
                    videoElement.src = URL.createObjectURL(input.files[0])
                    videoElement.muted = true
                    videoElement.play()
                }
                else{
                    if (imageMimes.includes(splitImageName[splitImageName.length - 1])) {
                        let inputsource = URL.createObjectURL(input.files[0])
                        label.style.backgroundImage = `url(${inputsource})`
                    }
                    else{
                        const fileReader = new FileReader()
                        fileReader.readAsText(input.files[0])
                        fileReader.onload = (ev) =>{
                            label.innerHTML = `
                            <h2>+</h2>
                            <p>Subtitle File</p>
                            <h3>${input.files[0].name}</h3>
                            ${ev.target.result.slice(0,100)}`
                        }
                    }
                }
            }
        </script>
    </head>
    <body>
        <div class="side-div">
            <%- include('./sections/nav')%>
        </div>
        <main>
            <%- include('./sections/header')%>
            <form class="main-link-form glass card">
                <h1>Create/Edit Link</h1>
                <span>
                    <label for="title">File Title</label>
                    <br>
                    <input type="text" class="light" placeholder="Enter File Title" name="title" id="title">
                </span>
                <br>
                <div class="link-section">
                    <div>
                        <label for="link-select">How do you want to upload your link?</label>
                        <select name="link_select" id="link-select" class="light" onchange="changeVideoInputType()">
                            <option value="link">Link</option>
                            <option value="upload">Upload</option>
                            <option value="ftp">FTP</option>
                        </select>
                    </div>
                    <div id="contains-link-inputs" data-name="link">
                        <span>
                            <label for="main_link">Main Link</label>
                            <br>
                            <input type="text" class="light" placeholder="Enter Main Link to file" name="main_link" id="main_link">
                        </span>
                        <br>
                        <span>
                            <label for="alt_link">Alternate Link</label>
                            <br>
                            <input type="text" class="light" placeholder="Enter File Alternate Links" name="alt_link" id="alt_link">
                        </span>
                    </div>
                    <div id="contains-file-inputs" data-name="upload">
                        <label for="video_file" id="video_file_label">
                            <h2>+</h2>
                            <p>Upload Video File</p>
                        </label>
                        <br>
                        <input type="file" class="light" accept=".mp4" name="video_file" id="video_file" onchange="setLabelImage('video_file','video_file_label')">
                    </div>
                    <div id="contains-ftp-inputs" data-name="ftp">
                        <label for="ip_address">IP Address</label>
                        <br>
                        <input type="text" class="light" placeholder="i.e ftp://example.com or ftp://<ip_address>" name="ip_address" id="ip_address">
                        <br>
                        <label for="username">Username</label>
                        <br>
                        <input type="text" class="light" placeholder="Username" name="username" id="username">
                        <br>
                        <label for="password">Password</label>
                        <br>
                        <input type="text" class="light" placeholder="Password" name="password" id="password">
                        <br>
                        <label for="file_name">File Name</label>
                        <br>
                        <input type="text" class="light" placeholder="File Name" name="file_name" id="file_name">
                    </div>
                </div>
                <br>
                <span>
                    <label for="subtitles" id="subtitles_label">
                        <h2>+</h2>
                        <p>Subtitle File</p>
                    </label>
                    <br>
                    <input type="file" class="light" accept=".srt,.ttml,.xml,.vtt" id="subtitles" name="subtitles" onchange="setLabelImage('subtitles','subtitles_label')">
                </span>
                <br>
                <span>
                    <label for="preview_img" id="preview_img_label">
                        <h2>+</h2>
                        <p>Preview Image</p>
                    </label>
                    <br>
                    <input type="file" class="light" accept=".png,.jpg" name="preview_img" id="preview_img" onchange="setLabelImage('preview_img','preview_img_label')">
                </span>
                <button>Submit</button>
            </form>
        </main>
    </body>
</html>